#ifndef TimeBehaviorH
#define TimeBehaviorH
#include "../Component/Component.h"
#include "../Behavior/AbstractBehavior.h"
/**
 * This behavior should be added by default to each "decorative" 3d object, in order to create
 *  the effect of the user moving through this 3d world...
 * */

//TODO:this should be inside the class...
static const float DEFAULT_SPEED=0.1f;

class BaseKeyboardBehavior: public AbstractBehavior{	
	
  public:
	BaseKeyboardBehavior(){}
    virtual ~BaseKeyboardBehavior(){}   
    
    //todo:make an "function" object with the responsability of generating the new position
    void  onKeyDown(SDLKey key){
    	float deltaX=0.0f;    	
    	float deltaZ=0.0f;

    	switch(key){ 
    	case SDLK_UP:{
    		deltaZ=DEFAULT_SPEED;
    		break;
    	}
    	case SDLK_DOWN:{
    		deltaZ=-DEFAULT_SPEED;
    		break;
    	}
    	case SDLK_RIGHT:{
    		deltaX=-DEFAULT_SPEED;
    		break;
    	}
    	case SDLK_LEFT:{
    		deltaX=DEFAULT_SPEED;
    		break;
    	}
    	default:{
    		break;
    	}
    	}
    	Position* currentPosition=getComponent()->getPosition();
    	Position* newPosition=new Position(currentPosition->getAbsoluteX()+deltaX,currentPosition->getAbsoluteY(),currentPosition->getAbsoluteZ()+deltaZ);
    	getComponent()->setPosition(newPosition);
    }    


};
#endif
